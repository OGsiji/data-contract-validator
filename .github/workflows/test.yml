# .github/workflows/test.yml
name: ðŸ§ª Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[test]"
    
    - name: Run basic tests
      run: |
        python -m data_contract_validator.cli --help
        python -m data_contract_validator.cli --version
    
    - name: Test with examples
      run: |
        cd examples/basic_usage
        python -m data_contract_validator.cli validate \
          --dbt-project dbt_project \
          --fastapi-local fastapi_app/models.py
    
    # Optional: Only upload coverage if token exists
    - name: Upload coverage to Codecov
      if: matrix.python-version == '3.9' && env.CODECOV_TOKEN != ''
      uses: codecov/codecov-action@v3
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      with:
        file: ./coverage.xml
        fail_ci_if_error: false  # Don't fail CI if codecov fails

  lint:
    name: Linting
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.9"
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"
    
    - name: Run black (if available)
      run: black --check . || echo "Black not configured, skipping"
      continue-on-error: true
    
    - name: Run flake8 (if available)
      run: flake8 data_contract_validator/ || echo "Flake8 not configured, skipping"
      continue-on-error: true